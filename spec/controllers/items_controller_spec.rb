require 'spec_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator.  If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails.  There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.
#
# Compared to earlier versions of this generator, there is very limited use of
# stubs and message expectations in this spec.  Stubs are only used when there
# is no simpler way to get a handle on the object needed for the example.
# Message expectations are only used when there is no simpler way to specify
# that an instance is receiving a specific message.

describe ItemsController do
  let(:item){ FactoryGirl.create(:item) }

  describe "GET index" do
    it "assigns all items as @items" do
      get :index, {}
      assigns(:items).should eq([item])
    end
  end

  describe "GET show" do
    it "assigns the requested item as @item" do
      get :show, {:id => item.to_param}
      assigns(:item).should eq(item)
    end

    describe "when a user is sign in" do
      let(:user){ FactoryGirl.create(:user) }

      before(:each) do
        session[:user_id] = user.id
      end

      it "create a seeing for the touch." do
        SeeingPage.should_receive(:create!)
        get :show, {id: item.to_param}
      end

      it "create touch of a current user and an item." do
        Touch.should_receive(:create!)
        get :show, {id: item.to_param}
      end
    end 
  end

end
